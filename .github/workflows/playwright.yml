# name: Playwright Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: lts/*

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Install Allure dependencies
#         run: npm install -D @playwright/test allure-playwright

#       - name: Ensure allure-results directory exists
#         run: mkdir -p allure-results

#       - name: Run Playwright tests with Allure
#         run: npx playwright test --reporter=allure-playwright

#       - name: Install Allure CLI
#         run: npm install -g allure-commandline

#       - name: Generate Allure Report
#         run: allure generate allure-results --clean -o allure-report

#       - name: Upload Allure Report
#         uses: actions/upload-artifact@v4
#         with:
#           name: allure-report
#           path: allure-report
#           retention-days: 30
name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardtotal: [4]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    #Install Playwright Browsers
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    #Run Playwright Tests
    - name: Run Playwright tests
      run: npx playwright test --grep '@smoke' --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

    # #Upload Blob Reports
    # - name: Upload blob report to Github Actions Artifacts
    # if: always()
    # users: actions/upload-artifact@v4
    # with:
    #   name: blob-report-${{ matrix.shardIndex }}
    #   path: blob-report
    #   retention-days: 1
      
  merge-reports:
    #Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [playwright-tests]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    #Setup & Install Bun
    - uses: oven-sh/setup-bun@v2
    - name: Install dependencies
      run: bun install

    - name: Download blob reports from Github Actions Artifacts
      uses: actions/download-artifact@v4
      with: 
        path: all-blob-reports
        pattern: blob-report-*
        merge-multiple: true
    
    - name: Merge into HTML Report
      run: npx playwright merge-reports --reporter html ./all-blob-reports

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-report--attempt-${{ github.run_attempt }}
        path: playwright-report
        retention-days: 30
